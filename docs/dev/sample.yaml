# Sample Kubernetes Objects YAML
---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
# Pod
apiVersion: v1
kind: Pod
metadata:
  namespace: demo
  name: example-pod
  labels:
    app: myapp
spec:
  containers:
    - name: example-container
      image: nginx:latest
      ports:
        - containerPort: 80
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo
  name: example-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: example-container
          image: nginx:latest
          ports:
            - containerPort: 80
---
# Service
apiVersion: v1
kind: Service
metadata:
  namespace: demo
  name: example-service
spec:
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: demo
  name: example-configmap
data:
  ENV_VAR_1: "value1"
  ENV_VAR_2: "value2"
---
# Secret
apiVersion: v1
kind: Secret
metadata:
  namespace: demo
  name: example-secret
type: Opaque
data:
  username: YWRtaW4= # base64 encoded value for 'admin'
  password: MWYyZDFlMmU2N2Rm # base64 encoded value for 'mysecretpassword'
---
# StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: demo
  name: example-statefulset
spec:
  serviceName: "example"
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: example-container
          image: nginx:latest
---
# DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: demo
  name: example-daemonset
spec:
  selector:
    matchLabels:
      name: example-daemonset
  template:
    metadata:
      labels:
        name: example-daemonset
    spec:
      containers:
        - name: example-container
          image: nginx
---
# Job
apiVersion: batch/v1
kind: Job
metadata:
  namespace: demo
  name: example-job
spec:
  template:
    spec:
      containers:
        - name: job-container
          image: busybox
          command: ["echo", "Hello World"]
      restartPolicy: Never
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: demo
  name: example-ingress
spec:
  rules:
    - host: example.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: example-service
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: demo
  name: example-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
